version: '3.5'
services:
  api01:
    build: .
    hostname: api01
    container_name: api01-phoenix
    environment:
      - PHX_HOST=api01
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/rinha
      - SECRET_KEY_BASE=Hy7pQWVbcnpz7w45pawgl5aqG7HdyDHiXQh/dGQN0bVDCKIPKd4D1aiN3v24F0Jg
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    networks:
      - api_network
    # deploy:
      # resources:
        # limits:
          # cpus: '0.5'
          # memory: '150MB'

  api02:
    build: .
    hostname: api02
    container_name: api02-phoenix
    environment:
      - PHX_HOST=api02
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/rinha
      - SECRET_KEY_BASE=Hy7pQWVbcnpz7w45pawgl5aqG7HdyDHiXQh/dGQN0bVDCKIPKd4D1aiN3v24F0Jg
      - PORT=4001
    ports:
      - "4001:4001"
    networks:
      - api_network

  postgres:
    image: postgres:16.1-alpine3.19
    container_name: postgres
    restart: always
    # command: postgres -c 'max_connections=75' -c 'log_error_verbosity=terse'
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rinha
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - api_network
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.4'
    #       memory: '200MB'

  nginx:
    image: nginx:1.25.3-alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    networks:
      - api_network
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.1'
    #       memory: '50MB'

networks:
  api_network:
    driver: bridge
